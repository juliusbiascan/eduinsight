services:

  coturn:
    image: coturn/coturn
    container_name: coturn
    volumes:
      - ./coturn/turnserver.conf:/etc/coturn/turnserver.conf:ro
    restart: always
    environment:
      - EXTERNAL_IP=192.168.1.82
      - TURN_USER=jlzkdev
      - TURN_PASSWORD=jlzkdev
    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
      - "49152-49200:49152-49200/udp"  # Use a smaller range of ports
    command: ["turnserver", "-c", "/etc/coturn/turnserver.conf", "--external-ip=${EXTERNAL_IP}"]
 
  eduinsight:
    container_name: nextjs
    build:
      context: .
    image: eduinsight:latest
    restart: always
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://eduinsight_user:eduinsight_pass@mysql:3306/eduinsight
    env_file: .env
    depends_on:
      - mysql

  mysql:
    image: mysql:latest
    restart: always
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: eduinsight
      MYSQL_USER: eduinsight_user
      MYSQL_PASSWORD: eduinsight_pass
      TZ: Asia/Manila
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl:ro
    restart: always

  socket:
    container_name: socket
    restart: unless-stopped
    # the path of directory for build
    build:
      context: ./server
      dockerfile: Dockerfile
    image: socket:latest
    #env_file: /server/.env
    # the changes in my local will be reflected into container (development only)
    volumes:
      - ./server:/usr/src/app
      # - /usr/src/app/node_modules
    ports:
      - "4000:4000"      # Socket API
      - "9001:9001"      # Socket WS
    expose:
      # internal ports
      - "4000"
    environment:
      NODE_ENV: development
      SERVER_PORT: 4000 

volumes:
  mysql_data:
